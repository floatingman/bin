
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
         "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SABnzbd</title>
<meta name="viewport" content="width=320; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;"/>
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE">
<META HTTP-EQUIV="PRAGMA" CONTENT="NO-CACHE">
<style type="text/css" media="screen">@import "static/iui/iui.css";</style>
<script type="application/x-javascript" src="static/iui/iui.js"></script>
<script type="text/javascript" src="static/MochiKit/MochiKit.js"></script>
<link rel="apple-touch-icon" href="static/apple-touch-icon.png"/>
<script type="text/javascript">
var RefreshTime = 10;
var jsontimeout;
MochiKit.DOM.addLoadEvent(onpageload);

function onpageload() {
//alert("hi5");
loadingJSON();
}

//loads up the json for the queue page and changes the values in the document
function loadingJSON(){	

	if (RefreshTime>0) {
	clearTimeout ( jsontimeout );
	jsontimeout = setTimeout("loadingJSON();", RefreshTime*1000);		
	}	
	var url = "api?mode=qstatus&output=json&apikey=$session";

	var d = loadJSONDoc(url);
	var gotMetadata = function (info) 
	{
		//alert(info["kbpersec"]);
		
		speed = info["kbpersec"].toFixed(0);
		var paused = info["paused"];		
		if (paused==true) speed = 0;



		var elemsSpeed = [];
        var elemsMbleft = [];
        var elemsMbtotal = [];
        var elemsPaused = [];
        elemsPaused = getElementsByTagAndClassName("span", "status");
     
        elemsSpeed = getElementsByTagAndClassName("span", "speed");

        //.innerHTML = speed;
        //document.getElementsByClassName("speed").innerHTML = info["mbleft"].toFixed(2);
        //alert(elemsSpeed[0].innerHTML);
		elemsMbleft = getElementsByTagAndClassName("span", "mbleft");
        //.innerHTML = info["mbleft"].toFixed(2);
		elemsMbtotal = getElementsByTagAndClassName("span", "mbtotal");
        //.innerHTML = info["mb"].toFixed(2);
        //var children = elemsSpeed.childNodes;
        //alert(elemsSpeed.legth);
        //alert(elemsSpeed.length);
        for (var i=0; i < elemsSpeed.length; i++)
        {
            //alert("hi1");
            elemsSpeed[i].innerHTML = speed;
            elemsMbleft[i].innerHTML = info["mbleft"].toFixed(2);
            elemsMbtotal[i].innerHTML = info["mb"].toFixed(2);
            
     		if (paused == true)
    		{
    			elemsPaused[i].innerHTML = "<span class='paused'>| Paused</span>";
    						//alert("paused");
    		} else if 	(paused == false && speed>0) 
    		{
    			elemsPaused[i].innerHTML = "<span class='downloading'>| Downloading</span>";
    						//alert("down");			
    		} else { 
    			elemsPaused[i].innerHTML = "<span class='idle'>| Idle</span>";
    						//alert("idle");			
    		}       
        }
        //alert("hi2");
        
	};
	var metadataFetchFailed = function (err) {
	  //alert("The metadata for MochiKit.Async could not be fetched :(");
	};
	d.addCallbacks(gotMetadata, metadataFetchFailed);
    }	
    
	function deletequeueitem(elem)
	{
        //alert(elem);
		//document.getElementById(elem).innerHTML = "";
        node = document.getElementById(elem);
        node.parentNode.removeChild(node);
		d = doSimpleXMLHttpRequest('queue/delete', {uid: elem, session: '$session'});
		//d.addCallback(history.go(-1));
		//d.addErrback(handleServerError);
	}
    
	var status2;
    if ("paused" == "True") status2 = true;
    else status2 = false;
    function ajax(url)
    {
        doSimpleXMLHttpRequest(url);
    }
	function toggle()
	{

		if (status2 == true)
		{
			status2 = false;
            var elemsPaused = [];
            var elemsStatus2 = [];
            elemsPaused = getElementsByTagAndClassName("span", "status");
            elemsStatus2 = getElementsByTagAndClassName("span", "status2");
            for (var i=0; i < elemsPaused.length; i++)
            {
                elemsPaused[i].innerHTML = "<span class='paused'>| Paused</span>";
            }
            for (var i=0; i < elemsStatus2.length; i++)
            {
                elemsStatus2[i].innerHTML = "Resume";
                
            }
			res = doSimpleXMLHttpRequest("api?mode=pause&apikey=$session");
		}
		else
		{
			status2 = true;
            var elemsPaused = [];
            var elemsStatus2 = [];
            elemsPaused = getElementsByTagAndClassName("span", "status");
            elemsStatus2 = getElementsByTagAndClassName("span", "status2");
            for (var i=0; i < elemsPaused.length; i++)
            {
                elemsPaused[i].innerHTML = "<span class='idle'>| Idle</span>";
                
            }
            for (var i=0; i < elemsStatus2.length; i++)
            {
                elemsStatus2[i].innerHTML = "Pause";
                
            }
			res = doSimpleXMLHttpRequest("api?mode=resume&apikey=$session");
		}
	}

	//based from Mochikit documentation - finds all the form values for an element and returns formatted query string
	function getFormValues(element)
	{

	    kv = MochiKit.DOM.formContents(element);
	    names = kv[0];
	    values = kv[1];

		kvstr = queryString(kv)
	    return kvstr;
	}

    
    
	//a function for submitting forms, grabs all the form info the the form defined by saveelement. Can also execute an additional page get after the post
	function submitconfig(extra, element)
	{
		var values = [];
		var elementt;
		if (element) elementt = document.getElementById(element);
		values = getFormValues(elementt);
		var url = extra;
		var d = doXHR(url,
	    {
		    method:'POST',
		    sendContent:values,
		    headers: {"Content-Type":"application/x-www-form-urlencoded"}

	    });
		if (saveelement) document.getElementById(saveelement).innerHTML = "<img src='static/images/ajax-loader.gif' />";
	    d.addCallback(function (result)
	    {
	      if (saveelement) document.getElementById(saveelement).innerHTML = "Saved";
		  if(url2) lr(url2,refresh);
	    });



	    d.addErrback( function (result)
	    {
	      //if (saveelement) document.getElementById(saveelement).innerHTML = "Error";
	    });

	}
	function toggleValue(element)
	{
        //alert('curr value is...');
        curr = document.getElementById(element);
        //alert(curr.value);
        if (curr.value == 0) 
        {
            //alert('changed to 1');
            curr.value = 1;
        }
        else {
            curr.value = 0;
            //alert('changed to 0');
        }
	}
    
	function changequeuedetails(page)
	{
        append = '&session=$session&dummy='+Math.random();
        url = page+append;
		d = doSimpleXMLHttpRequest(url);
	}

</script>

<style type="text/css">

body > ul > li {
    font-size: 14px;
}

body > ul > li > a {
    padding-left: 54px;
    padding-right: 40px;
    min-height: 34px;
}



h2 {
    margin: 10px;
    color: slateblue;
}

p {
    margin: 10px;
}

.radiolabel{
margin-bottom:10px;}

//label {width:200px;}
</style>

</head>

<body>
    <div class="toolbar">
        <h1 id="pageTitle"></h1>
        <a id="backButton" class="button" href="#"></a>
    </div>
    
    <ul title="SABnzbd" selected="true">
        <li><center><span class="speed">$kbpersec</span> KB/s | <span class="mbleft">$mbleft</span>/<span class="mbtotal">$mb</span> MB <span class="status"><!--#if $paused then "| Paused" else ""#--></span> </center></li> 
		<li><a href="#Add">Add</a></li>
        <li><a href="queue/">Queue</a></li>
        <li><a href="history/">History</a></li>
        <li><a href="config/">Config</a></li>
        <li><a href="connections/">Connections</a></li>
        <li class="group">Tools</li>
        <li><a href="javascript:void 0" onClick="javascript:toggle()"><span class="status2"><!--#if $paused then "Resume" else "Pause"#--></span></a></li>
    </ul>
	
    <ul title="Add new nzb" id="Add">
        <li><center><span class="speed">$kbpersec</span> KB/s | <span class="mbleft">$mbleft</span>/<span class="mbtotal">$mb</span> MB <span class="status"><!--#if $paused then "| Paused" else ""#--></span> </center></li> 
		
			
		
    <form title="AddNew" id="AddNew" class="panel" action="javascript:void 0" method="POST" selected="true">
        <h2>Add <!--#if $varExists('newzbinDetails') then "Report-ID / " else ""#-->URL</h2>
         <fieldset>
            <div class="row">
    		    <label><!--#if $varExists('newzbinDetails') then "Report-ID / " else ""#-->URL:</label><br/><br/>
    		    <input style="margin:0px;padding:0px;margin-left:15px;" type="text" name="id" value="">	    
            </div>
				<!--#if $cat_list#-->
			<div class="row">
				<label>Category:</label><br/><br/>

					<select name="cat" style="margin-left:16px;">
						<!--#for $ct in $cat_list#-->
							<option value="$ct">$ct</option>
						<!--#end for#-->
					</select class="addnewselect" >

            </div>
				<!--#end if#-->	
			<div class="row">
				<label>Post-Processing:</label><br/><br/>
				<select name="pp" style="margin-left:16px;">
				<option value="-1" <!--#if $cat_list then "selected" else ""#-->>Default</option>
				<option value="0">None</option>
				<option value="1">+Repair</option>
				<option value="2">+Unpack</option>
				<option value="3" <!--#if $cat_list then "" else "selected"#-->>+Delete</option>
				</select>
            </div>
				<!--#if $script_list#-->		
			<div class="row">
				<label>Script:</label><br/><br/>

					<select name="script" style="margin-left:16px;">
					<!--#for $sc in $script_list#-->
						<option value="$sc">$sc</option>
					<!--#end for#-->
					</select>

            </div>
				<!--#end if#-->
                <input type="hidden" value="$session" id="addNewSession1" name="session">
			
			
        </fieldset>     
	<input type="submit" onClick="javascript:history.back();submitconfig('addID', 'AddNew')" value="Save Changes">
    </form>
		
		
    </ul>

</body>
</html>
